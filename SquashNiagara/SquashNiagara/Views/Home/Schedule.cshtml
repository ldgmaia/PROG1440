@model IEnumerable<SquashNiagara.Models.Fixture>

@{
    ViewData["Title"] = "Schedule";
}

<h1 class="text-center">Squash Niagara Schedule</h1>


<form asp-action="Schedule">
    <div class="form-inline">
        <div class="row ">
            <div class="form-group col-sm-10 ">
                @foreach (Division i in @ViewBag.DivisionID)
                {
                        <button name="DivisionID" value="@i.ID" class="btn btn-primary btn-sm">@i.Name</button>
                }
            </div>
            <div class="form-group col-sm-2 ">
                <label class="col-sm-5" style="margin-left:10px;">Season</label>
                <div class="col-sm-7">@Html.DropDownList("SeasonID", (SelectList)ViewBag.SeasonID, new { @class = "form-control input-sm", onchange = "this.form.submit();" })</div>

            </div>
        </div>
    </div>
</form>
<br /><br />
<table id="indxFix" class="table table-striped table-bordered nowrap" style="width: 100%">
    <thead>
        <tr>
            <th>
                <small> @Html.DisplayNameFor(model => model.Date)</small>
            </th>
            <th>
                <small> @Html.DisplayNameFor(model => model.Time)</small>
            </th>
            <th>
                <small>  @Html.DisplayNameFor(model => model.HomeTeam)</small>
            </th>
            <th class="text-nowrap">
                <small>  @Html.DisplayNameFor(model => model.HomeTeamScore)</small>
            </th>
            <th class="text-nowrap">
                <small>  @Html.DisplayNameFor(model => model.AwayTeamScore)</small>
            </th>
            <th>
                <small> @Html.DisplayNameFor(model => model.AwayTeam)</small>
            </th>
            <th>
                <small>  @Html.DisplayNameFor(model => model.Venue)</small>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @{ 
            bool homeWin = false;
            bool awayWin = false;
        }
        @foreach (var item in Model)
        {
            if ((@Convert.ToDouble(item.HomeTeamScore) + @Convert.ToDouble(item.HomeTeamBonus)) > (@Convert.ToDouble(item.AwayTeamScore) + @Convert.ToDouble(item.AwayTeamBonus)))
            {
                homeWin = true;
            }
            else if ((@Convert.ToDouble(item.HomeTeamScore) + @Convert.ToDouble(item.HomeTeamBonus)) < (@Convert.ToDouble(item.AwayTeamScore) + @Convert.ToDouble(item.AwayTeamBonus)))
            {
                awayWin = true;
            }
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Date)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Time)
                </td>
                <td>
                    @if (homeWin)
                    {
                        <strong>@Html.DisplayFor(modelItem => item.HomeTeam.Name)</strong>
                    }
                    else
                    {
                        @Html.DisplayFor(modelItem => item.HomeTeam.Name)
                    }
                </td>
                <td>
                    @if (item.HomeTeamScore.HasValue)
                    {
                        @(@Convert.ToDouble(item.HomeTeamScore) + @Convert.ToDouble(item.HomeTeamBonus))
                    }
                    else
                    {
                        @Html.DisplayFor(modelItem => item.HomeTeamScore)
                    }
                </td>
                <td>
                    @if (item.HomeTeamScore.HasValue)
                    {
                        @(@Convert.ToDouble(item.AwayTeamScore) + @Convert.ToDouble(item.AwayTeamBonus))
                    }
                    else
                    {
                        @Html.DisplayFor(modelItem => item.AwayTeamScore)
                    }
                </td>
                <td>
                    @if (awayWin)
                    {
                    <strong>@Html.DisplayFor(modelItem => item.AwayTeam.Name)</strong>
                    }
                    else
                    {
                        @Html.DisplayFor(modelItem => item.AwayTeam.Name)
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Venue.Name)
                </td>
                <td>
                    <small>
                        <a asp-action="FixtureDetails" asp-route-id="@item.ID">Details</a>
                    </small>
                </td>
            </tr>
            homeWin = false;
            awayWin = false;
        }
    </tbody>
</table>
<link rel="stylesheet" href="https://cdn.datatables.net/1.10.19/css/dataTables.bootstrap.min.css" />
<link rel="stylesheet" href="https://cdn.datatables.net/fixedheader/3.1.5/css/fixedHeader.bootstrap.min.css"/>
<link rel="stylesheet" href=" https://cdn.datatables.net/responsive/2.2.3/css/responsive.bootstrap.min.css"/>
@section scripts{
    <script src="https://code.jquery.com/jquery-3.3.1.js"></script>
    <script src="https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.19/js/dataTables.bootstrap.min.js"></script>
    <script src=" https://cdn.datatables.net/fixedheader/3.1.5/js/dataTables.fixedHeader.min.js"></script>
    <script src="https://cdn.datatables.net/responsive/2.2.3/js/dataTables.responsive.min.js"></script>
    <script src="https://cdn.datatables.net/responsive/2.2.3/js/responsive.bootstrap.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#indxFix').DataTable({
                "order": [[0, "des"]],
                responsive: true
            });
        });
    </script>

}